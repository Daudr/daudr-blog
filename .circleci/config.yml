version: 2.1
orbs:
  cypress: cypress-io/cypress@1
jobs:
  install_dependencies:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Install Dependencies
          command: npm install

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}

          paths:
            - ./node_modules
            - ~/.npm
            - ~/.cache

  unit-test:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Unit tests component
          command: npx jest --ci

  e2e-test:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Run E2E Tests
          command: npm run test:e2e:ci

  build:
    docker:
      - image: circleci/node:lts

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo/

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}

          paths:
            - ./node_modules
            - ~/.npm
            - ~/.cache

      - run:
          name: Cleaning up Gatsby
          command: npx gatsby clean

      - run:
          name: Gatsby Build
          command: npm run build

      - persist_to_workspace:
          root: ~/repo
          paths:
            - public
            - node_modules

  build-test:
    docker:
      - image: circleci/node:lts

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo/

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Cleaning up Gatsby
          command: npx gatsby clean

      - run:
          name: Gatsby Build
          command: npm run build:test

      - persist_to_workspace:
          root: ~/repo
          paths:
            - public
            - node_modules

  build-prod:
    docker:
      - image: circleci/node:lts

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo/

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Cleaning up Gatsby
          command: npx gatsby clean

      - run:
          name: Gatsby Build
          command: npm run build:prod

      - persist_to_workspace:
          root: ~/repo
          paths:
            - public
            - node_modules

  deploy-test:
    working_directory: ~/repo

    docker:
      - image: circleci/node:lts

    steps:
      - checkout:
          path: ~/repo/

      - attach_workspace:
          at: ~/repo

      - run:
          name: Firebase Deploy Test
          command: npx firebase deploy --only hosting:test --token=$FIREBASE_TOKEN

  deploy-prod:
    working_directory: ~/repo

    docker:
      - image: circleci/node:lts

    steps:
      - checkout:
          path: ~/repo/

      - attach_workspace:
          at: ~/repo

      - run:
          name: Firebase Deploy Prod
          command: npx firebase deploy --only hosting:prod --token=$FIREBASE_TOKEN

  semantic-release:
    working_directory: ~/repo

    docker:
      - image: circleci/node:lts

    steps:
      - checkout:
          path: ~/repo/

      - run:
          name: Semantic release
          command: npm run semantic-release || true

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - install_dependencies

      - cypress/install

      - unit-test:
          requires:
            - install_dependencies

      - cypress/run:
          requires:
            - install_dependencies
            - cypress/install

          group: 'all tests' # name this group "all tests" on the dashboard
          start: 'npm run develop' # start server before running tests
          wait-on: 'http://localhost:8000'

      - build-test:
          requires:
            - install_dependencies

          filters:
            branches:
              only: develop

      - build-prod:
          requires:
            - install_dependencies

          filters:
            branches:
              only: master

      - deploy-test:
          requires:
            - install_dependencies
            - unit-test
            - cypress/run
            - build-test

          filters:
            branches:
              only: develop

      - deploy-prod:
          requires:
            - unit-test
            - cypress/run
            - build-prod

          filters:
            branches:
              only: master

      - semantic-release:
          requires:
            - deploy-prod

          filters:
            branches:
              only: master
